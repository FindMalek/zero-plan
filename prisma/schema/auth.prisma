model User {
  id String @id

  name          String
  email         String
  emailVerified Boolean

  image String?

  createdAt DateTime
  updatedAt DateTime

  sessions Session[]
  accounts Account[]
  events   Event[]

  @@unique([email])
  @@map("user")
}

model Session {
  id String @id

  token String

  ipAddress String?
  userAgent String?

  expiresAt DateTime
  createdAt DateTime
  updatedAt DateTime

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id String @id

  accountId  String
  providerId String

  accessToken  String?
  refreshToken String?
  idToken      String?
  scope        String?
  password     String?

  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?

  createdAt DateTime
  updatedAt DateTime

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("account")
}

model Verification {
  id String @id

  identifier String
  value      String

  createdAt DateTime?
  updatedAt DateTime?

  expiresAt DateTime

  @@map("verification")
}

model Waitlist {
  id    String @id @default(uuid())
  email String @unique

  country   String?
  city      String?
  ipAddress String?
  userAgent String?

  createdAt DateTime @default(now())

  @@index([email])
  @@map("waitlist")
}
